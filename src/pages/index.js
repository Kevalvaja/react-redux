import Head from 'next/head'
import { Inter } from 'next/font/google'
const inter = Inter({ subsets: ['latin'] })
import { useDispatch, useSelector } from 'react-redux'
import { decremented, incremented } from './redux/index.js'
import { fetchCity } from './redux/citySlice.js'
import { fetchState } from './redux/stateSlice.js'
export default function Home() {
  const dispatch = useDispatch();
  const count = useSelector(state => state.counter.value)
  const { cityData, status } = useSelector(state => state.cityAllData)
  const { data: stateData } = useSelector(state => state.stateAllData)
  const heandleCityName = () => {
    dispatch(fetchCity());
  }
  const heandleStateName = () => {
    dispatch(fetchState());
  }
  if (status == "loading") {
    return <h1>{status}</h1>
  }
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div style={{ textAlign: "center", margin: "auto" }}>
        <button type='submit' style={{ color: 'white', background: "black", width: "5%", fontSize: "15px" }}
          onClick={(e) => dispatch(incremented())}
        ><h1>+</h1></button>
        <h1>{count}</h1>
        <button type='submit' style={{ color: 'white', background: "black", width: "5%", fontSize: "15px" }}
          onClick={(e) => dispatch(decremented())}
        ><h1>-</h1></button><br />
        {/* Display city name using redux */}
        <button type='submit' style={{ color: 'black', background: "lightblue", width: "15%", fontSize: "8px", margin: "8px" }}
          onClick={(e) => heandleCityName()}
        ><h1>Display City Name</h1></button>
        {/* Display state name using redux */}
        <button type='submit' style={{ color: 'black', background: "lightblue", width: "15%", fontSize: "8px", margin: "8px" }}
          onClick={(e) => heandleStateName()}
        ><h1>Display State Name</h1></button>
        {/* Display city name using redux */}
        <ul>
          {cityData?.map((city, key) => (
            <>
              <li key={key}>{city?.city_name}</li>
            </>
          ))}
        </ul>
        {/* Display state name using redux */}
        <table>
          <tbody>
            {stateData?.map((state, key) => (
              <>
                <tr>
                  <td>{++key}</td>
                  <td key={key} style={{ textAlign: 'left' }}>{state.state_name}</td>
                  {state?.status == 1 ?
                    <td style={{ background: "green", color: "white" }}>Active</td>
                    : <td style={{ background: "red", color: "white" }}>Inactive</td>}
                </tr>
                <tr>
                </tr>
              </>
            ))}
          </tbody>
        </table>
      </div>
    </>
  )
}
